$date
	Sat Nov 13 16:54:44 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module usr_nbit_tb $end
$var wire 4 ! parallelout [3:0] $end
$var reg 1 " clk $end
$var reg 1 # left $end
$var reg 4 $ parallelin [3:0] $end
$var reg 1 % right $end
$var reg 1 & rst $end
$var reg 2 ' select [1:0] $end
$scope module instantiation $end
$var wire 1 " clk $end
$var wire 1 # left $end
$var wire 4 ( parallelin [3:0] $end
$var wire 1 % right $end
$var wire 1 & rst $end
$var wire 2 ) select [1:0] $end
$var wire 4 * parallelout [3:0] $end
$scope begin genblk1[1] $end
$scope module m1 $end
$var wire 1 " clk $end
$var wire 1 + left $end
$var wire 1 , parallelin $end
$var wire 1 - right $end
$var wire 1 & rst $end
$var wire 2 . select [1:0] $end
$var reg 1 / parallelout $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module m1 $end
$var wire 1 " clk $end
$var wire 1 0 left $end
$var wire 1 1 parallelin $end
$var wire 1 2 right $end
$var wire 1 & rst $end
$var wire 2 3 select [1:0] $end
$var reg 1 4 parallelout $end
$upscope $end
$upscope $end
$scope module m0 $end
$var wire 1 " clk $end
$var wire 1 # left $end
$var wire 1 5 parallelin $end
$var wire 1 6 right $end
$var wire 1 & rst $end
$var wire 2 7 select [1:0] $end
$var reg 1 8 parallelout $end
$upscope $end
$scope module mn $end
$var wire 1 " clk $end
$var wire 1 9 left $end
$var wire 1 : parallelin $end
$var wire 1 % right $end
$var wire 1 & rst $end
$var wire 2 ; select [1:0] $end
$var reg 1 < parallelout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x<
bx ;
x:
x9
x8
bx 7
x6
x5
x4
bx 3
x2
x1
x0
x/
bx .
x-
x,
x+
bx *
bx )
bx (
bx '
x&
x%
bx $
x#
0"
bx !
$end
#1000
0,
01
05
0:
b0 $
b0 (
1%
1#
b0 '
b0 )
b0 .
b0 3
b0 7
b0 ;
1&
#2000
06
00
09
0-
0+
02
0/
04
08
b0 !
b0 *
0<
1"
#4000
0"
#5000
0&
#6000
1"
#8000
0"
#9000
1,
11
b110 $
b110 (
b11 '
b11 )
b11 .
b11 3
b11 7
b11 ;
#10000
16
10
19
1-
1/
b110 !
b110 *
14
1"
#12000
0"
#13000
01
1:
b1010 $
b1010 (
b0 '
b0 )
b0 .
b0 3
b0 7
b0 ;
#14000
1"
#16000
0"
#17000
b1 '
b1 )
b1 .
b1 3
b1 7
b1 ;
#18000
09
0-
1+
12
04
18
b1011 !
b1011 *
1<
1"
#20000
0"
#21000
b10 '
b10 )
b10 .
b10 3
b10 7
b10 ;
#22000
02
19
1-
0<
b111 !
b111 *
14
1"
#24000
0"
#25000
0,
15
0:
b1 $
b1 (
b0 '
b0 )
b0 .
b0 3
b0 7
b0 ;
#26000
1"
#28000
0"
#29000
1,
05
1:
b1010 $
b1010 (
b1 '
b1 )
b1 .
b1 3
b1 7
b1 ;
#30000
12
09
0-
1<
b1011 !
b1011 *
04
1"
#32000
0"
#33000
b10 '
b10 )
b10 .
b10 3
b10 7
b10 ;
#34000
19
1-
02
14
b111 !
b111 *
0<
1"
